openapi: "3.0.0"
info:
  description: "This document contains information about the endpoints exposed by CoreTemplateStudio's Engine 
  API. This API is used to expose functionality provided by the engine to other applications that will be built
  on top of this, including Windows Template Studio (WinTS) and Web Template Studio (WebTS)"
  version: "1.0.0"
  title: "CoreTemplateStudio Engine API"
  contact:
    email: "t-satara@microsoft.com"
servers:
- url: "http://localhost:5000/api"
  description: "local server to connect with the engine"
tags:
- name: "sync"
  description: "Endpoints to sync templates with CDN/vsix or local template folder, must be called before calling any other endpoints!"
- name: "project type"
  description: "Information about available project types"
- name: "framework"
  description: "Information about available frameworks"
- name: "feature"
  description: "Information about available features"
- name: "page"
  description: "Information about available pages"
- name: "generate"
  description: "Endpoints to generate templates"
paths:
  /generate:
    post:
      tags:
      - "generate"
      summary: "Generate templates from user selections given a path and a project name."
      description: "This endpoint parses and validates a JSON of user selections 
      from the request body and generates the templates to the gen path with the project name provided."
      operationId: "generate"
      parameters:
      - in: "query"
        name: "projectName"
        description: "The name of the project."
        required: true
        schema:
          type: "string"
          example: "Test"
      - in: "query"
        name: "genPath"
        description: "The output folder for generation"
        required: true
        schema:
          type: "string"
          example: "./Output"
      requestBody:
        description: "User selection as JSON. The selections are the keys 
        returned from other (information/detail) endpoints. Note that the
        backend/frontend can be *null* depending on the project. The selections
        are *case-insensitive*"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSelection'
      responses:
        200:
          $ref: '#/components/responses/GenerateResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
  /projectType:
    get:
      tags:
      - "project type"
      summary: "Gets available project types for the current platform and language"
      description: "This returns all the project types for the current platform and language. The parameters defined in sync will be used."
      operationId: "GetProjectType"
      responses:
        200:
          $ref: '#/components/responses/ProjectTypeResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
  /sync:
    post:
      tags:
      - "sync"
      summary: "Syncs templates with CDN/local vsix for the given platform"
      description: "Sync local templates with the updated templates for given platform. Use 'uwp' as 
      platform to sync for WinTS and 'web' for WebTS."
      operationId: "SyncTemplates"
      parameters:
      - in: "query"
        name: "platform"
        description: "Which platform to sync for. Can be either uwp (for WinTS) or web (for WebTS)."
        required: true
        schema:
          type: "string"
          enum:
          - "uwp"
          - "web"
      - in: query
        name: path
        description: >-
          Path to the vsix or templates folder.
        required: true
        schema:
          type: string
        example: ../../../..
      - in: query
        name: language
        description: >-
          Required for Uwp and ignored for Web.
        required: false
        schema:
          type: string
          enum:
          - C#
          - VB
      responses:
        200:
          $ref: '#/components/responses/SyncResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
  /framework:
    get:
      tags:
      - "framework"
      summary: "Get all frameworks for the current platform for the specified project type"
      description: "Returns frameworks for given current platform, language and project type. Platform and language must first be defined
      in the POST /sync endpoint. Project type should correspond to the name of a project type returned from the /projectType endpoint."
      operationId: "GetFrameworks"
      parameters:
      - in: query
        name: projectType
        description: >-
          The project type you want frameworks for, to get meaningful output make sure it is the project type from /projectType.
        required: true
        schema:
          type: string
        example: FullStackWebApp
      responses:
        200:
          $ref: '#/components/responses/FrameworksResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
  /page:
    get:
      tags:
      - "page"
      summary: "Get all valid pages for given frameworks and  project type"
      description: "Returns valid pages for multiple frameworks and the project type passed in query"
      operationId: "GetPagesForFrameworks"
      parameters:
      - in: "query"
        name: "frontEndFramework"
        description: "Frontend framework to return matching pages for. Provide both frontend and backend framework
        for web unless backend only project type is chosen."
        required: true
        schema:
          type: "string"
        example: "ReactJS"
      - in: "query"
        name: "backEndFramework"
        description: "Backend to return matching pages for. Provide both frontend and backend framework
        for web unless backend only project type is chosen. Backend can be ommitted for WinTS."
        required: true
        schema:
          type: "string"
        example: "NodeJS"
      - in: "query"
        name: "projectType"
        description: "The project type to return matching pages for. 
        To get meaningful output make sure it is the project type from /projectType."
        required: true
        schema:
          type: "string"
        example: "FullStackWebApp"
      responses:
        200:
          $ref: '#/components/responses/PageResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
  /feature:
    get:
      tags:
      - "feature"
      summary: "Get all valid features for given frameworks and project type"
      description: "Given a project type, and possibly either a frontend and backend framework
        will return a list of features supported by these filters."
      operationId: "GetFeaturesForFrameworks"
      parameters:
      - in: "query"
        name: "frontEndFramework"
        description: "Frontend framework to return matching features for. Provide both frontend and backend framework
        for web unless backend only project type is chosen."
        required: true
        schema:
          type: "string"
        example: "ReactJS"
      - in: "query"
        name: "backEndFramework"
        description: "Backend to return matching features for. Provide both frontend and backend framework
        for web unless backend only project type is chosen. Backend can be ommitted for WinTS."
        required: true
        schema:
          type: "string"
        example: "NodeJS"
      - in: "query"
        name: "projectType"
        description: "The project type to return matching features for. 
        To get meaningful output make sure it is the project type from /projectType."
        required: true
        schema:
          type: "string"
        example: "FullStackWebApp"
      responses:
        200:
          $ref: '#/components/responses/PageResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    UserSelection:
      type: "object"
      properties:
        platform:
          type: "string"
        projectType:
          type: "string"
        frontEndFramework:
          type: "string"
        backEndFramework:
          type: "string"
        language:
          type: "string"
        homeName:
          type: "string"
        pages:
          type: "array"
          items:
            type: "object"
        features:
          type: "array"
          items:
            type: "object"
      example:
        {
            "ProjectType": "FullStackWebApp",
            "FrontEndFramework": "ReactJS",
            "BackEndFramework": "NodeJS",
            "Language": "Any",
            "HomeName": "Test",
            "Features": [],
            "Platform": "Web",
            "Pages":
            [
              {
                "Name": "HomePageTest",
                "Template": 
                    {
                        "configMountPointId": "a140f98f-6c53-43ef-8cfb-3dcb96360c03",
                        "author": "Microsoft",
                        "classifications": [
                            "Universal"
                        ],
                        "defaultName": null,
                        "description": "This is the most html basic page.",
                        "identity": "wts.Page.Html.Blank",
                        "generatorId": "0c434df7-e2cb-4dee-b216-d7c58c8eb4b3",
                        "groupIdentity": "wts.Page.Html.Blank",
                        "precedence": 0,
                        "name": "Html Blank",
                        "shortName": null,
                        "tags": {
                            "language": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "Any": ""
                                },
                                "defaultValue": "Any"
                            },
                            "type": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "item": ""
                                },
                                "defaultValue": "item"
                            },
                            "wts.type": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "page": ""
                                },
                                "defaultValue": "page"
                            },
                            "wts.platform": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "Web": ""
                                },
                                "defaultValue": "Web"
                            },
                            "wts.projecttype": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "FullStackWebApp": ""
                                },
                                "defaultValue": "FullStackWebApp"
                            },
                            "wts.frontEndFramework": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "all": ""
                                },
                                "defaultValue": "all"
                            },
                            "wts.backEndFramework": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "all": ""
                                },
                                "defaultValue": "all"
                            },
                            "wts.version": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "1.0.0": ""
                                },
                                "defaultValue": "1.0.0"
                            },
                            "wts.displayOrder": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "1": ""
                                },
                                "defaultValue": "1"
                            },
                            "wts.genGroup": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "0": ""
                                },
                                "defaultValue": "0"
                            },
                            "wts.rightClickEnabled": {
                                "description": null,
                                "choicesAndDescriptions": {
                                    "true": ""
                                },
                                "defaultValue": "true"
                            }
                        },
                        "cacheParameters": {
                            "wts.rootNamespace": {
                                "dataType": null,
                                "defaultValue": null,
                                "description": ""
                            },
                            "wts.itemNamespace": {
                                "dataType": null,
                                "defaultValue": null,
                                "description": ""
                            },
                            "baseclass": {
                                "dataType": null,
                                "defaultValue": null,
                                "description": ""
                            },
                            "setter": {
                                "dataType": null,
                                "defaultValue": null,
                                "description": ""
                            }
                        },
                        "configPlace": "/Web/Pages/Html.Blank/.template.config/template.json",
                        "localeConfigMountPointId": "00000000-0000-0000-0000-000000000000",
                        "localeConfigPlace": null,
                        "hostConfigMountPointId": "00000000-0000-0000-0000-000000000000",
                        "hostConfigPlace": null,
                        "thirdPartyNotices": null,
                        "baselineInfo": {}
                    }
              }
            ]
        }
  responses:
    FeatureResponse:
      description: "Success response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "array"
                items:
                  type: "object"
                  example: 
                    "AzureDatabase": {
                      "name": "Azure Database",
                      "description":"An Azure database feature for Web Applications",
                      "imagePath": "/icon.png"
                    }
                    "AzureKeyVault": {
                      "name": "Azure Key Vault",
                      "description":"An Azure key vault feature for Web Applications",
                      "imagePath": "/icon.png"
                    }
              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    PageResponse:
      description: "Success response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "array"
                items:
                  type: "object"
                  example: 
                    "items": [
                      {
                          "configMountPointId": "a140f98f-6c53-43ef-8cfb-3dcb96360c03",
                          "author": "Microsoft",
                          "classifications": [
                              "Universal"
                          ],
                          "defaultName": null,
                          "description": "This is the most html basic page.",
                          "identity": "wts.Page.Html.Blank",
                          "generatorId": "0c434df7-e2cb-4dee-b216-d7c58c8eb4b3",
                          "groupIdentity": "wts.Page.Html.Blank",
                          "precedence": 0,
                          "name": "Html Blank",
                          "shortName": null,
                          "tags": {
                              "language": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "Any": ""
                                  },
                                  "defaultValue": "Any"
                              },
                              "type": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "item": ""
                                  },
                                  "defaultValue": "item"
                              },
                              "wts.type": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "page": ""
                                  },
                                  "defaultValue": "page"
                              },
                              "wts.platform": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "Web": ""
                                  },
                                  "defaultValue": "Web"
                              },
                              "wts.projecttype": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "FullStackWebApp": ""
                                  },
                                  "defaultValue": "FullStackWebApp"
                              },
                              "wts.frontEndFramework": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "all": ""
                                  },
                                  "defaultValue": "all"
                              },
                              "wts.backEndFramework": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "all": ""
                                  },
                                  "defaultValue": "all"
                              },
                              "wts.version": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "1.0.0": ""
                                  },
                                  "defaultValue": "1.0.0"
                              },
                              "wts.displayOrder": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "1": ""
                                  },
                                  "defaultValue": "1"
                              },
                              "wts.genGroup": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "0": ""
                                  },
                                  "defaultValue": "0"
                              },
                              "wts.rightClickEnabled": {
                                  "description": null,
                                  "choicesAndDescriptions": {
                                      "true": ""
                                  },
                                  "defaultValue": "true"
                              }
                          },
                          "cacheParameters": {
                              "wts.rootNamespace": {
                                  "dataType": null,
                                  "defaultValue": null,
                                  "description": ""
                              },
                              "wts.itemNamespace": {
                                  "dataType": null,
                                  "defaultValue": null,
                                  "description": ""
                              },
                              "baseclass": {
                                  "dataType": null,
                                  "defaultValue": null,
                                  "description": ""
                              },
                              "setter": {
                                  "dataType": null,
                                  "defaultValue": null,
                                  "description": ""
                              }
                          },
                          "configPlace": "/Web/Pages/Html.Blank/.template.config/template.json",
                          "localeConfigMountPointId": "00000000-0000-0000-0000-000000000000",
                          "localeConfigPlace": null,
                          "hostConfigMountPointId": "00000000-0000-0000-0000-000000000000",
                          "hostConfigPlace": null,
                          "thirdPartyNotices": null,
                          "baselineInfo": {}
                      }
                  ]
              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    SyncResponse:
      description: "Success response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "object"
                properties:
                  wasUpdated:
                    type: "boolean"
              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    GenerateResponse:
      description: "Success response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "object"
                example: 
                  "response":
                    {
                      "projectName": "Test",
                      "safeProjectName": "Test",
                      "generationOutputPath": "./Output",
                      "destinationPath": "./Output",
                      "projectInfo": {
                          "projects": [],
                          "projectItems": [],
                          "sdkReferences": [],
                          "nugetReferences": [],
                          "projectReferences": []
                      },
                      "filesToOpen": [],
                      "failedMergePostActions": [],
                      "mergeFilesFromProject": {},
                      "projectMetrics": {
                          "Generation": 0.2124428
                      }
                    }
              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    ProjectTypeResponse:
      description: "Success response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "array"
                items:
                  type: "object"
                  example:
                    "items": [
                        {
                          "name": "FullstackWebApp",
                          "displayName": "Fullstack Web Application",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\projectTypes\\FullstackWebApp.xaml",
                          "summary": "An end to end web application, which includes frontend (e.g. React) backend (e.g. Node) and database.",
                          "description": "Fullstack Web Application project type details.",
                          "author": "Microsoft",
                          "order": 1,
                          "metadataType": 0,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                            "enabled": true
                          }
                        },
                        {
                          "name": "RestAPI",
                          "displayName": "Restful API",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\projectTypes\\RestAPI.xaml",
                          "summary": "A Restful API is a collection of endpoints connected to a database implemented in a backend framework such as Node.JS",
                          "description": "Restful API project type details.",
                          "author": "Microsoft",
                          "order": 2,
                          "metadataType": 0,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                            "enabled": true
                          }
                        }
                    ]

              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    FrameworksResponse:
      description: "Success response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "array"
                items:
                  type: "object"
                  example: 
                    "items" : [
                      {
                          "name": "ReactJS",
                          "displayName": "ReactJS",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\frameworks\\ReactJS.svg",
                          "summary": "React is a JavaScript library for building user interfaces. It is maintained by Facebook and a community of individual developers.",
                          "description": "ReactJS Framework details.",
                          "author": "Microsoft",
                          "order": 1,
                          "metadataType": 1,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                              "type": "frontend",
                              "enabled": true
                          }
                      },
                      {
                          "name": "NodeJS",
                          "displayName": "NodeJS",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\frameworks\\NodeJS.svg",
                          "summary": "Node.js is a highly efficient and scalable non-blocking I/O platform that was build on top of Google Chrome V8 engine and its ECMAScript.",
                          "description": "ReactJS Framework details.",
                          "author": "Microsoft",
                          "order": 1,
                          "metadataType": 1,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                              "type": "backend",
                              "enabled": true
                          }
                      },
                      {
                          "name": "ASPNET",
                          "displayName": "ASP.NET",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\frameworks\\ASPNET.svg",
                          "summary": "ASP.NET is an open-source server-side web application framework designed for web development to produce dynamic web pages.",
                          "description": "ASP.NET Framework details",
                          "author": "Microsoft",
                          "order": 2,
                          "metadataType": 1,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                              "type": "backend",
                              "enabled": false
                          }
                      } 
                    ]
              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    FrameworksResponseSpecific:
      description: "Success response for frameworks/backend"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "array"
                items:
                  type: "object"
                  example: 
                    "items" : [
                      {
                          "name": "NodeJS",
                          "displayName": "NodeJS",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\frameworks\\NodeJS.svg",
                          "summary": "Node.js is a highly efficient and scalable non-blocking I/O platform that was build on top of Google Chrome V8 engine and its ECMAScript.",
                          "description": "ReactJS Framework details.",
                          "author": "Microsoft",
                          "order": 1,
                          "metadataType": 1,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                              "type": "backend",
                              "enabled": true
                          }
                      },
                      {
                          "name": "ASPNET",
                          "displayName": "ASP.NET",
                          "icon": "C:\\ProgramData\\CoreTemplateStudio\\Templates\\LocalEnv\\0.0.0.0\\_catalog\\frameworks\\ASPNET.svg",
                          "summary": "ASP.NET is an open-source server-side web application framework designed for web development to produce dynamic web pages.",
                          "description": "ASP.NET Framework details",
                          "author": "Microsoft",
                          "order": 2,
                          "metadataType": 1,
                          "licenses": "",
                          "licenseTerms": null,
                          "platforms": [
                              "Web"
                          ],
                          "languages": [
                              "Any"
                          ],
                          "tags": {
                              "type": "backend",
                              "enabled": false
                          }
                      } 
                    ]
              statusCode:
                type: "integer"
                example: 200
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
    ErrorResponse:
      description: "Error response"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              value:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "Invalid input"
              statusCode:
                type: "integer"
                example: 400
              formatters:
                type: "array"
                items: 
                  type: "string"
              contentTypes:
                type: "array"
                items: 
                  type: "string"
              declaredType:
                type: "string"
externalDocs:
  description: "Core Template Studio Engine API documentation"
  url: "https://github.com/Microsoft/CoreTemplateStudio/blob/dev/code/src/CoreTemplateStudio/CoreTemplateStudio.Api/README.md"